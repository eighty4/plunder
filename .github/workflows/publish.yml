name: Publish
run-name: Publish ${{ inputs.semver-bump }} bump
on:
  workflow_call:
    inputs:
      semver-bump:
        type: string
        default: prerelease
  workflow_dispatch:
    inputs:
      semver-bump:
        description: Semver bump release type
        required: true
        type: choice
        default: patch
        options:
          - major
          - minor
          - patch
concurrency: publish
env:
  SEMVER_BUMP: ${{ inputs.semver-bump }}
jobs:
  check-build-params:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: validate only prerelease semver bump for publishing @next
        run: |
          [[ ${{github.event_name}} == "push" ]] && exit 0
          [[ $SEMVER_BUMP == "prerelease" ]] && exit 1 || exit 0
      - name: validate changesets for release
        run: |
          [[ $SEMVER_BUMP == "prerelease" ]] && exit 0
          git fetch --tags
          VERSION=$(npm version $SEMVER_BUMP --no-git-tag-version)
          PRIOR_RELEASE_TAG=$(curl -s https://api.github.com/repos/eighty4/plunder/releases | jq -r '.[] | select(.prerelease == false) | .tag_name' | head -n 1)
          PRIOR_RELEASE_SHA=$(git rev-list -n 1 "$PRIOR_RELEASE_TAG")
          git diff $PRIOR_RELEASE_SHA -- CHANGELOG.md | grep "## $VERSION"
  verify:
    uses: ./.github/workflows/verify.yml
    needs: [ check-build-params ]
  create-git-tags:
    runs-on: ubuntu-latest
    needs: verify
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - id: cli
        run: |
          VERSION=$(npm version ${{ inputs.semver-bump }})
          echo "tag=cli-$VERSION" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION:1}" >> "$GITHUB_OUTPUT"
        working-directory: cli
      - id: core
        run: |
          VERSION=$(npm version ${{ inputs.semver-bump }})
          echo "tag=core-$VERSION" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION:1}" >> "$GITHUB_OUTPUT"
        working-directory: core
      - id: push
        run: |
          [[ $SEMVER_BUMP = "prerelease" ]] && NPM_TAG="next" || NPM_TAG="latest"
          [[ $SEMVER_BUMP = "prerelease" ]] && PRERELEASE="true" || PRERELEASE="false"
          git config --global user.name "Adam McKee"
          git config --global user.email "adam.be.g84d@gmail.com"
          git add cli/package.json core/package.json
          git commit -m "bump @$NPM_TAG package versions"
          git push
          git tag ${{ steps.cli.outputs.tag }}
          git tag ${{ steps.core.outputs.tag }}
          git push --tags
          echo "prerelease=$PRERELEASE" >> "$GITHUB_OUTPUT"
          echo "npm-tag=$NPM_TAG" >> "$GITHUB_OUTPUT"
    outputs:
      cli-tag: ${{ steps.cli.outputs.tag }}
      cli-version: ${{ steps.cli.outputs.version }}
      core-tag: ${{ steps.core.outputs.tag }}
      core-version: ${{ steps.core.outputs.version }}
      npm-tag: ${{ steps.push.outputs.npm-tag }}
      prerelease: ${{ steps.push.outputs.prerelease }}
  create-cli-gh-release:
    needs: [create-git-tags]
    permissions:
      contents: write
    uses: ./.github/workflows/release.yml
    with:
      package_label: CLI
      package_name: plunder
      prerelease: ${{ needs.create-git-tags.outputs.prerelease }}
      tag: ${{ needs.create-git-tags.outputs.cli-tag }}
      version: ${{ needs.create-git-tags.outputs.cli-version }}
    secrets: inherit
  create-core-gh-release:
    needs: [create-git-tags]
    permissions:
      contents: write
    uses: ./.github/workflows/release.yml
    with:
      package_label: Core
      package_name: plunder-core
      prerelease: ${{ needs.create-git-tags.outputs.prerelease }}
      tag: ${{ needs.create-git-tags.outputs.core-tag }}
      version: ${{ needs.create-git-tags.outputs.core-version }}
    secrets: inherit
  npm-publish:
    name: publish to npm
    needs: [ create-cli-gh-release, create-core-gh-release, create-git-tags ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ needs.create-git-tags.outputs.cli-tag }}
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - run: pnpm i
      - run: pnpm -r build
      - name: publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: pnpm publish -r --access public --tag ${{ needs.create-git-tags.outputs.npm-tag }}
